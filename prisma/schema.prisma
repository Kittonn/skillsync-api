generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
}

enum Level {
  BEGINNER
  INTERMEDIATE
  ADVANCED
}

enum Type {
  BANNER
  FAQ
  CATEGORY
}

type Avatar {
  publicId String
  url      String
}

type Thumbnail {
  publicId String
  url      String
}

type Benefit {
  title String
}

type Prerequisite {
  title String
}

type Link {
  title String
  url   String
}

type Faq {
  question String
  answer   String
}

type Category {
  title String
}

type BannerImage {
  url      String
  publicId String
}

type Banner {
  title    String
  subtitle String
  image    BannerImage
}

type CourseDetail { 
  videoUrl     String
  title        String
  videoSection String
  description  String
  videoLength  Int
  videoPlayer  String
  links        Link[]
  suggestion   String
}

model User {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  name         String
  email        String   @unique
  password     String
  isVerified   Boolean  @default(false)
  refreshToken String?
  avatar       Avatar?
  role         Role     @default(USER)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  courseIds String[] @db.ObjectId
  courses   Course[] @relation(fields: [courseIds], references: [id])

  @@map("users")
}


model Course {
  id             String         @id @default(auto()) @map("_id") @db.ObjectId
  name           String         @unique
  description    String
  price          Int
  estimatedPrice Int
  thumbnail      Thumbnail?
  tags           String
  level          Level
  demoUrl        String
  benefits       Benefit[]
  prerequisites  Prerequisite[]
  courseDetails  CourseDetail[]
  rating         Int            @default(0)
  purchased      Int            @default(0)
  createdAt      DateTime       @default(now())
  updatedAt      DateTime       @updatedAt
  userIds        String[]       @db.ObjectId
  users          User[]         @relation(fields: [userIds], references: [id])

  @@map("courses")
}

model Layout {
  id         String     @id @default(auto()) @map("_id") @db.ObjectId
  type       Type       @unique
  faq        Faq[]
  categories Category[]
  banner     Banner?

  @@map("layouts")
}
